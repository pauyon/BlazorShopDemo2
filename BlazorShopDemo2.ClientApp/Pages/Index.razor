@page "/"

@inject IProductService ProductService

<AuthorizeView>
    <Authorized>
        <p>Welcome, @context.User.Identity.Name</p>
    </Authorized>
    <NotAuthorized>
        <p>Not signed in</p>
    </NotAuthorized>
</AuthorizeView>

<MudGrid>
    @if (_isLoading)
    {
        <MudProgressCircular Color="Color.Primary"/>
    }
    else
    {
        @foreach (var product in _products)
        {
            <MudItem xs="12" lg="2" md="4">
                <MudCard Elevation="5" Class="text-center">
                    <MudCardMedia Image="@product.ImageUrl" Height="250" />
                    <MudCardContent>
                        <MudText Typo="Typo.h6">@product.Name</MudText>
                        <MudText Typo="Typo.body2">@product.Description</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="@($"/details/{@product.Id}")">View</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    }
</MudGrid>

@code {
    private bool _isLoading = true;
    public IEnumerable<ProductDto> _products;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        _products = await ProductService.GetAll();
        _isLoading = false;
    }
}